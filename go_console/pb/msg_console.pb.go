// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: msg_console.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//查询监控时长
type QueryMonitorTime int32

const (
	QueryMonitorTime_OneHour  QueryMonitorTime = 0 //一小时
	QueryMonitorTime_SixHour  QueryMonitorTime = 1 //六小时
	QueryMonitorTime_OneDay   QueryMonitorTime = 2 //一天
	QueryMonitorTime_SevenDay QueryMonitorTime = 3 //七天
)

// Enum value maps for QueryMonitorTime.
var (
	QueryMonitorTime_name = map[int32]string{
		0: "OneHour",
		1: "SixHour",
		2: "OneDay",
		3: "SevenDay",
	}
	QueryMonitorTime_value = map[string]int32{
		"OneHour":  0,
		"SixHour":  1,
		"OneDay":   2,
		"SevenDay": 3,
	}
)

func (x QueryMonitorTime) Enum() *QueryMonitorTime {
	p := new(QueryMonitorTime)
	*p = x
	return p
}

func (x QueryMonitorTime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryMonitorTime) Descriptor() protoreflect.EnumDescriptor {
	return file_msg_console_proto_enumTypes[0].Descriptor()
}

func (QueryMonitorTime) Type() protoreflect.EnumType {
	return &file_msg_console_proto_enumTypes[0]
}

func (x QueryMonitorTime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryMonitorTime.Descriptor instead.
func (QueryMonitorTime) EnumDescriptor() ([]byte, []int) {
	return file_msg_console_proto_rawDescGZIP(), []int{0}
}

//查询主机监控数据
type QueryHostMonitorDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTime QueryMonitorTime `protobuf:"varint,1,opt,name=QueryTime,proto3,enum=QueryMonitorTime" json:"QueryTime,omitempty"`
}

func (x *QueryHostMonitorDataReq) Reset() {
	*x = QueryHostMonitorDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_console_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHostMonitorDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHostMonitorDataReq) ProtoMessage() {}

func (x *QueryHostMonitorDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_console_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHostMonitorDataReq.ProtoReflect.Descriptor instead.
func (*QueryHostMonitorDataReq) Descriptor() ([]byte, []int) {
	return file_msg_console_proto_rawDescGZIP(), []int{0}
}

func (x *QueryHostMonitorDataReq) GetQueryTime() QueryMonitorTime {
	if x != nil {
		return x.QueryTime
	}
	return QueryMonitorTime_OneHour
}

//查询主机监控数据
type QueryHostMonitorDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrCpuPer    float64   `protobuf:"fixed64,1,opt,name=CurrCpuPer,proto3" json:"CurrCpuPer,omitempty"`
	CurrMemoryPer float64   `protobuf:"fixed64,2,opt,name=CurrMemoryPer,proto3" json:"CurrMemoryPer,omitempty"`
	Keys          []string  `protobuf:"bytes,3,rep,name=Keys,proto3" json:"Keys,omitempty"`
	Cpu           []float64 `protobuf:"fixed64,4,rep,packed,name=Cpu,proto3" json:"Cpu,omitempty"`
	Memory        []float64 `protobuf:"fixed64,5,rep,packed,name=Memory,proto3" json:"Memory,omitempty"`
}

func (x *QueryHostMonitorDataResp) Reset() {
	*x = QueryHostMonitorDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_console_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHostMonitorDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHostMonitorDataResp) ProtoMessage() {}

func (x *QueryHostMonitorDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_msg_console_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHostMonitorDataResp.ProtoReflect.Descriptor instead.
func (*QueryHostMonitorDataResp) Descriptor() ([]byte, []int) {
	return file_msg_console_proto_rawDescGZIP(), []int{1}
}

func (x *QueryHostMonitorDataResp) GetCurrCpuPer() float64 {
	if x != nil {
		return x.CurrCpuPer
	}
	return 0
}

func (x *QueryHostMonitorDataResp) GetCurrMemoryPer() float64 {
	if x != nil {
		return x.CurrMemoryPer
	}
	return 0
}

func (x *QueryHostMonitorDataResp) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *QueryHostMonitorDataResp) GetCpu() []float64 {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *QueryHostMonitorDataResp) GetMemory() []float64 {
	if x != nil {
		return x.Memory
	}
	return nil
}

//查询主机监控数据
type QueryClusterMonitorDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTime QueryMonitorTime `protobuf:"varint,1,opt,name=QueryTime,proto3,enum=QueryMonitorTime" json:"QueryTime,omitempty"`
}

func (x *QueryClusterMonitorDataReq) Reset() {
	*x = QueryClusterMonitorDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_console_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryClusterMonitorDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryClusterMonitorDataReq) ProtoMessage() {}

func (x *QueryClusterMonitorDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_msg_console_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryClusterMonitorDataReq.ProtoReflect.Descriptor instead.
func (*QueryClusterMonitorDataReq) Descriptor() ([]byte, []int) {
	return file_msg_console_proto_rawDescGZIP(), []int{2}
}

func (x *QueryClusterMonitorDataReq) GetQueryTime() QueryMonitorTime {
	if x != nil {
		return x.QueryTime
	}
	return QueryMonitorTime_OneHour
}

//查询主机监控数据
type ClusterMonitorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrCpuPer    float64   `protobuf:"fixed64,1,opt,name=CurrCpuPer,proto3" json:"CurrCpuPer,omitempty"`
	CurrMemoryPer float64   `protobuf:"fixed64,2,opt,name=CurrMemoryPer,proto3" json:"CurrMemoryPer,omitempty"`
	CurrGoroutine float64   `protobuf:"fixed64,3,opt,name=CurrGoroutine,proto3" json:"CurrGoroutine,omitempty"`
	CurrPreWeight float64   `protobuf:"fixed64,4,opt,name=CurrPreWeight,proto3" json:"CurrPreWeight,omitempty"`
	Keys          []string  `protobuf:"bytes,5,rep,name=Keys,proto3" json:"Keys,omitempty"`
	Cpu           []float64 `protobuf:"fixed64,6,rep,packed,name=Cpu,proto3" json:"Cpu,omitempty"`
	Memory        []float64 `protobuf:"fixed64,7,rep,packed,name=Memory,proto3" json:"Memory,omitempty"`
	Goroutine     []float64 `protobuf:"fixed64,8,rep,packed,name=Goroutine,proto3" json:"Goroutine,omitempty"`
	PreWeight     []float64 `protobuf:"fixed64,9,rep,packed,name=PreWeight,proto3" json:"PreWeight,omitempty"`
}

func (x *ClusterMonitorData) Reset() {
	*x = ClusterMonitorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msg_console_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterMonitorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMonitorData) ProtoMessage() {}

func (x *ClusterMonitorData) ProtoReflect() protoreflect.Message {
	mi := &file_msg_console_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMonitorData.ProtoReflect.Descriptor instead.
func (*ClusterMonitorData) Descriptor() ([]byte, []int) {
	return file_msg_console_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterMonitorData) GetCurrCpuPer() float64 {
	if x != nil {
		return x.CurrCpuPer
	}
	return 0
}

func (x *ClusterMonitorData) GetCurrMemoryPer() float64 {
	if x != nil {
		return x.CurrMemoryPer
	}
	return 0
}

func (x *ClusterMonitorData) GetCurrGoroutine() float64 {
	if x != nil {
		return x.CurrGoroutine
	}
	return 0
}

func (x *ClusterMonitorData) GetCurrPreWeight() float64 {
	if x != nil {
		return x.CurrPreWeight
	}
	return 0
}

func (x *ClusterMonitorData) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ClusterMonitorData) GetCpu() []float64 {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ClusterMonitorData) GetMemory() []float64 {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ClusterMonitorData) GetGoroutine() []float64 {
	if x != nil {
		return x.Goroutine
	}
	return nil
}

func (x *ClusterMonitorData) GetPreWeight() []float64 {
	if x != nil {
		return x.PreWeight
	}
	return nil
}

var File_msg_console_proto protoreflect.FileDescriptor

var file_msg_console_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x73, 0x74,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2f,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x75, 0x72, 0x72, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x75, 0x72, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x70, 0x75, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x03, 0x43, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x22, 0x4d, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x2f,
	0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xa0, 0x02, 0x0a, 0x12, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x72, 0x43, 0x70,
	0x75, 0x50, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x43, 0x75, 0x72, 0x72,
	0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x43,
	0x75, 0x72, 0x72, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x75, 0x72, 0x72, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x50, 0x72, 0x65, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x50,
	0x72, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x43, 0x70, 0x75, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x43, 0x70, 0x75, 0x12, 0x16,
	0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x47, 0x6f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x50, 0x72, 0x65, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x2a, 0x46, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x48, 0x6f, 0x75,
	0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x69, 0x78, 0x48, 0x6f, 0x75, 0x72, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x65, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x79, 0x10, 0x03, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msg_console_proto_rawDescOnce sync.Once
	file_msg_console_proto_rawDescData = file_msg_console_proto_rawDesc
)

func file_msg_console_proto_rawDescGZIP() []byte {
	file_msg_console_proto_rawDescOnce.Do(func() {
		file_msg_console_proto_rawDescData = protoimpl.X.CompressGZIP(file_msg_console_proto_rawDescData)
	})
	return file_msg_console_proto_rawDescData
}

var file_msg_console_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_msg_console_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_msg_console_proto_goTypes = []interface{}{
	(QueryMonitorTime)(0),              // 0: QueryMonitorTime
	(*QueryHostMonitorDataReq)(nil),    // 1: QueryHostMonitorDataReq
	(*QueryHostMonitorDataResp)(nil),   // 2: QueryHostMonitorDataResp
	(*QueryClusterMonitorDataReq)(nil), // 3: QueryClusterMonitorDataReq
	(*ClusterMonitorData)(nil),         // 4: ClusterMonitorData
}
var file_msg_console_proto_depIdxs = []int32{
	0, // 0: QueryHostMonitorDataReq.QueryTime:type_name -> QueryMonitorTime
	0, // 1: QueryClusterMonitorDataReq.QueryTime:type_name -> QueryMonitorTime
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_msg_console_proto_init() }
func file_msg_console_proto_init() {
	if File_msg_console_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msg_console_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHostMonitorDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_console_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHostMonitorDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_console_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryClusterMonitorDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msg_console_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterMonitorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msg_console_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msg_console_proto_goTypes,
		DependencyIndexes: file_msg_console_proto_depIdxs,
		EnumInfos:         file_msg_console_proto_enumTypes,
		MessageInfos:      file_msg_console_proto_msgTypes,
	}.Build()
	File_msg_console_proto = out.File
	file_msg_console_proto_rawDesc = nil
	file_msg_console_proto_goTypes = nil
	file_msg_console_proto_depIdxs = nil
}
